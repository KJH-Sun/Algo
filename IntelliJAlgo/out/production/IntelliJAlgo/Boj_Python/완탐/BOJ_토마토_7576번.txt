from sys import *
from collections import *

input = lambda: stdin.readline().rstrip()


def bfs(res):
    result = 0
    while res:
        x, y = res.popleft()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if 0 <= nx < N and 0 <= ny < M and field[nx][ny] == 0:
                field[nx][ny] = field[x][y] + 1
                if result < field[nx][ny]:
                    result = field[nx][ny]
                res.append((nx, ny))
    return result


M, N = map(int, input().split())
field = [list(map(int, input().split())) for _ in range(N)]
dx = [0, 0, -1, 1]
dy = [1, -1, 0, 0]
count = 0
newlist = [(i, j) for i in range(N) for j in range(M) if field[i][j] == 1]
check = [(i, j) for i in range(N) for j in range(M) if field[i][j] == 0]
if len(check) == 0:
    print(0)
    exit()
res = deque()
for i in newlist:
    res.append((i[0], i[1]))
day = bfs(res)
check = [(i, j) for i in range(N) for j in range(M) if field[i][j] == 0]
if len(check) != 0:
    print(-1)
else:
    print(day - 1)
